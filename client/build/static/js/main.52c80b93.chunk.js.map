{"version":3,"sources":["styled/styled.ts","components/Navbar.tsx","hooks/http.hook.ts","components/OperatorItem.tsx","components/Loader.tsx","components/OperatorsList.tsx","pages/homePage.tsx","hooks/form.hook.ts","utils/validateForm.ts","components/Modal.tsx","components/PayCard.tsx","pages/payPage.tsx","App.tsx","routes.tsx","serviceWorker.ts","index.tsx"],"names":["Container","styled","div","List","ul","Header","header","TitleH1","h1","Navbar","useHttp","useState","loading","setLoading","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","OperatorLi","li","StyledLink","Link","OperatorLogo","img","OperatorName","span","OperatorItem","operator","to","id","src","image","alt","title","spin","keyframes","Wrapper","Load","Loader","OperatorsList","operators","setOperators","fetchOperators","fetched","useEffect","Fragment","map","key","renderList","HomePage","useForm","callback","validate","phone","sum","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","Object","keys","length","handleChange","event","persist","target","name","value","handleSubmit","preventDefault","includes","isNaN","parseInt","ModalBackdrop","ModalContainer","ModalTitle","h3","Btn","button","Modal","onRequestClose","isSuccess","onKeyDown","keyCode","document","style","overflow","addEventListener","removeEventListener","type","onClick","Card","InputField","PhoneLabel","label","StyledInput","input","StyledInputMask","InputMask","ErrorP","p","ImgOperator","PayCard","history","useHistory","setIsSuccess","isPay","setIsModal","console","log","isModal","push","action","onSubmit","htmlFor","onChange","mask","placeholder","required","PayTitle","PayPage","match","params","setOperator","fetchOperator","App","routes","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.52c80b93.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  width: 85%;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  width: 85%;\r\n  margin: 0;\r\n  padding-top: 1rem;\r\n  list-style: none;\r\n`\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Container } from '../styled/styled';\r\n\r\nconst Header = styled.header`\r\n  background-color: #1e88e5;\r\n  box-shadow: 0 2px 2px 0 rgba(0,0,0,0.14), 0 3px 1px -2px rgba(0,0,0,0.12), 0 1px 5px 0 rgba(0,0,0,0.2);\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst TitleH1 = styled.h1`\r\n  margin: 0;\r\n  padding: 2rem 0;\r\n  text-align: center;\r\n  color: #FFFFFF;\r\n\r\n  @media (max-width: 650px) {\r\n    font-size: 1.5rem;\r\n  }\r\n`;\r\n\r\nexport const Navbar = () => {\r\n  return (\r\n    <>\r\n      <Header>\r\n        <Container>\r\n          <TitleH1>\r\n            Пополнение счета мобильного телефона\r\n          </TitleH1>\r\n        </Container>\r\n      </Header>\r\n    </>\r\n  )\r\n}","import {useState, useCallback} from 'react'\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n\r\n  const request = useCallback(async (url: string, method: string = 'GET', body: null | string = null, headers = {}) => {\r\n    setLoading(true);\r\n    try {\r\n      if (body) {\r\n        body = JSON.stringify(body);\r\n        headers['Content-Type'] = 'application/json';\r\n      }\r\n\r\n      const response = await fetch(url, {method, body, headers});\r\n      const data = await response.json();\r\n      \r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Something went wrong');\r\n      }\r\n\r\n      setLoading(false);\r\n\r\n      return data;\r\n    } catch (e) {\r\n      setLoading(false);\r\n      throw e;\r\n    }\r\n  }, []);\r\n\r\n\r\n  return { loading, request };\r\n};","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { Operator } from '../types/types';\r\n\r\nconst OperatorLi = styled.li`\r\n  width: 300px;\r\n  margin-right: 1.5rem;\r\n  margin-bottom: 1.5rem;\r\n  padding: 1rem;\r\n  background-color: #fff59d;\r\n  opacity: .7;\r\n  border-radius: 10px;\r\n  box-shadow: 0 2px 2px 0 rgba(0,0,0,0.14), 0 3px 1px -2px rgba(0,0,0,0.12), 0 1px 5px 0 rgba(0,0,0,0.2);\r\n  &:hover {\r\n    background-color: #fff176;\r\n  }\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  text-decoration: none;\r\n  margin: 0 auto;\r\n  height: 100%;\r\n`\r\n\r\nconst OperatorLogo = styled.img`\r\n  max-width: 200px;\r\n  height: auto;\r\n`;\r\n\r\nconst OperatorName = styled.span`\r\n  color: black;\r\n`\r\n\r\ntype Props = {\r\n  operator: Operator\r\n}\r\n\r\nexport const OperatorItem = ({operator}: Props) => {\r\n  return (\r\n    <OperatorLi>\r\n      <StyledLink to={`/pay/${operator.id}`}>\r\n        <OperatorLogo src={operator.image} alt={operator.title} />\r\n        <OperatorName>{operator.title}</OperatorName>\r\n      </StyledLink>\r\n    </OperatorLi>\r\n  )\r\n}","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nconst spin = keyframes`\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 8em 0px;\r\n`;\r\n\r\nconst Load = styled.div`\r\n  border: 6px solid #90caf9;\r\n  border-top: 6px solid #1e88e5;\r\n  border-radius: 50%;\r\n  width: 36px;\r\n  height: 36px;\r\n  animation: ${spin} 2s linear infinite;\r\n`;\r\n\r\nexport const Loader = () => (\r\n  <Wrapper>\r\n    <Load />\r\n  </Wrapper>\r\n);\r\n\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useHttp } from '../hooks/http.hook';\r\nimport { OperatorItem } from './OperatorItem';\r\nimport { List } from '../styled/styled';\r\nimport { Loader } from './Loader';\r\nimport { Operators, Operator } from '../types/types';\r\n\r\nexport const OperatorsList = () => {\r\n  const { request, loading } = useHttp();\r\n  const [ operators, setOperators ] = useState<Operators | []>([]);\r\n\r\n  const fetchOperators = useCallback(async (): Promise<void> => {\r\n    try {\r\n      const fetched: Operators = await request('/api/operators');\r\n      setOperators(fetched)\r\n    } catch (e) {}\r\n  }, [request]);\r\n\r\n  useEffect(() => {\r\n    fetchOperators()\r\n  }, [fetchOperators]);\r\n\r\n  const renderList = (operators: Operators) => (\r\n    <List>\r\n      {operators.map((operator: Operator) => (\r\n        <OperatorItem key={operator.id} operator={operator} />\r\n      ))}\r\n    </List>\r\n  )\r\n\r\n  return (\r\n    <React.Fragment>\r\n      { loading ? <Loader /> : renderList(operators)}\r\n    </React.Fragment>\r\n  )\r\n}","import React from 'react';\r\nimport { Navbar } from '../components/Navbar';\r\nimport { OperatorsList } from '../components/OperatorsList';\r\n\r\nexport const HomePage = () => {\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <OperatorsList />\r\n    </>\r\n  )\r\n}","import { useState, useEffect } from 'react';\r\nimport { Values } from '../types/types';\r\n\r\nconst useForm = (callback: any, validate: any) => {\r\n\r\n  const [values, setValues] = useState<Values>({phone: '', sum: ''});\r\n  const [errors, setErrors] = useState<Values>({phone: '', sum: ''});\r\n  const [isSubmitting, setIsSubmitting] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      callback();\r\n    }\r\n  }, [errors, callback, isSubmitting]);\r\n\r\n  const handleSubmit = (event: React.FormEvent) => {\r\n    if (event) event.preventDefault();\r\n    setErrors(validate(values));\r\n    setIsSubmitting(true);\r\n  };\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    event.persist();\r\n    setValues(values => ({ ...values, [event.target.name]: event.target.value }));\r\n  };\r\n\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    values,\r\n    errors,\r\n  }\r\n};\r\n\r\nexport default useForm;","import { Values } from \"../types/types\";\r\n\r\nexport const validate = (values: Values) => {\r\n  let errors: Values = {};\r\n  if (!values.phone) {\r\n    errors.phone = 'Телефон - обязательное поле';\r\n  } else if (values.phone.includes('_')) {\r\n    errors.phone = 'Неверный номер';\r\n  }\r\n  if (!values.sum) {\r\n    errors.sum = 'Сумма - обязательное поле';\r\n  } else if (+values.sum < 1 || +values.sum > 1000) {\r\n    errors.sum = 'Введите сумму от 1 до 1000';\r\n  } else if (isNaN(parseInt(values.sum))) {\r\n    errors.sum = 'Введите число';\r\n  }\r\n  return errors;\r\n};","import React, {useEffect} from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ModalBackdrop = styled.div`\r\n\tbackground: rgba(0, 0, 0, .65);\r\n\tbottom: 0;\r\n\tleft: 0;\r\n\toverflow: auto;\r\n\tposition: fixed;\r\n\tright: 0;\r\n\ttop: 0;\r\n\tz-index: 1;\r\n`\r\n\r\nconst ModalContainer = styled.div`\r\n  background: #e3f2fd;\r\n  border-radius: 5px;\r\n  max-width: 100%;\r\n  margin: 50px auto;\r\n  padding: 15px;\r\n  width: 560px;\r\n`\r\n\r\nconst ModalTitle = styled.h3`\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  margin-bottom: 25px;\r\n`\r\n\r\nconst Btn = styled.button`\r\n  background: #1e88e5;\r\n  border: 0;\r\n  border-radius: 5px;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  margin-bottom: 30px;\r\n  padding: 10px 15px;\r\n  transition: transform 100ms ease-out;\r\n\r\n  &:hover {\r\n    background: #1565c0;\r\n    transform: scale(1.1);\r\n  }\r\n`\r\n\r\ntype Props = {\r\n  isSuccess: boolean,\r\n  onRequestClose: () => void\r\n}\r\n\r\nexport const Modal = ({ onRequestClose, isSuccess }: Props) => {\r\n\tuseEffect(() => {\r\n\t\tfunction onKeyDown(event: KeyboardEvent) {\r\n\t\t\tif (event.keyCode === 27) {\r\n\t\t\t\tonRequestClose();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdocument.body.style.overflow = \"hidden\";\r\n\t\tdocument.addEventListener(\"keydown\", onKeyDown);\r\n\r\n\t\treturn () => {\r\n\t\t\tdocument.body.style.overflow = \"visible\";\r\n\t\t\tdocument.removeEventListener(\"keydown\", onKeyDown);\r\n\t\t};\r\n\t});\r\n\r\n\treturn (\r\n\t\t<ModalBackdrop>\r\n\t\t\t<ModalContainer>\r\n        <ModalTitle>{isSuccess ? 'Поздравляем': 'Ошибка'}</ModalTitle>\r\n        {\r\n          isSuccess\r\n            ? <p>Ваш запрос успешно отправлен</p>\r\n            : <p>Что то пошло не так, попробуйте снова</p>\r\n        }\r\n\t\t\t\t\r\n\t\t\t\t<p>\r\n\t\t\t\t\tДля продолжения нажмите кнопку ниже или клавишу Esc.\r\n\t\t\t\t</p>\r\n\t\t\t\t<Btn type=\"button\" onClick={onRequestClose}>\r\n\t\t\t\t\t{isSuccess ? 'На главную' : 'Еще раз'}\r\n\t\t\t\t</Btn>\r\n\t\t\t</ModalContainer>\r\n\t\t</ModalBackdrop>\r\n\t);\r\n};","import React, { useState, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport InputMask from \"react-input-mask\";\r\nimport useForm from '../hooks/form.hook';\r\nimport { validate } from '../utils/validateForm';\r\nimport { Modal } from './Modal';\r\nimport { useHttp } from '../hooks/http.hook';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Operator } from '../types/types';\r\n\r\nconst Card = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-left: 25%;\r\n  width: 50%;\r\n  padding: 1rem 1.5rem;\r\n  box-shadow: 0 2px 2px 0 rgba(0,0,0,0.14), 0 3px 1px -2px rgba(0,0,0,0.12), 0 1px 5px 0 rgba(0,0,0,0.2);\r\n  border-radius: 5px;\r\n\r\n  @media (max-width: 650px) {\r\n    margin-left: 0;\r\n    width: auto;\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    flex-direction: column;\r\n  }\r\n`\r\n\r\nconst InputField = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  max-width: 500px;\r\n`\r\n\r\nconst PhoneLabel = styled.label`\r\n  margin-bottom: 1rem;\r\n  font-size: 1.5rem;\r\n\r\n  @media (max-width: 650px) {\r\n    font-size: 1.2rem;\r\n  }\r\n`\r\n\r\nconst StyledInput = styled.input`\r\n  border: none;\r\n  outline: none;\r\n  border-bottom: 1px solid #1e88e5;\r\n  -webkit-box-shadow: 0 1px 0 0 #1e88e5;\r\n  box-shadow: 0 1px 0 0 #1e88e5;\r\n  margin-bottom: 1.5rem;\r\n`\r\n\r\nconst StyledInputMask = styled(InputMask)`\r\n  margin-bottom: 1.5rem;\r\n  border: none;\r\n  outline: none;\r\n  border-bottom: 1px solid #1e88e5;\r\n  -webkit-box-shadow: 0 1px 0 0 #1e88e5;\r\n  box-shadow: 0 1px 0 0 #1e88e5;\r\n`\r\n\r\nconst Btn = styled.button`\r\n  box-sizing: border-box;\r\n  padding: .3rem .7rem;\r\n  background-color: #ffd54f;\r\n  border: none;\r\n  box-shadow: 0 2px 2px 0 rgba(0,0,0,0.14), 0 3px 1px -2px rgba(0,0,0,0.12), 0 1px 5px 0 rgba(0,0,0,0.2);\r\n  transition: background-color .2s ease-out;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    box-shadow: 0 3px 3px 0 rgba(0,0,0,0.14), 0 1px 7px 0 rgba(0,0,0,0.12), 0 3px 1px -1px rgba(0,0,0,0.2);\r\n    background-color: #ffecb3;\r\n  }\r\n`\r\n\r\nconst ErrorP = styled.p`\r\n  margin: 0;\r\n  margin-bottom: .5rem;\r\n  color: red;\r\n`\r\n\r\nconst ImgOperator = styled.img`\r\n  max-width: 200px;\r\n  height: auto;\r\n\r\n  @media (max-width: 500px) {\r\n    order: -1;\r\n  }\r\n`\r\n\r\ntype Props = {\r\n  operator: Operator\r\n}\r\n\r\nexport const PayCard = ({operator}: Props) => {\r\n  const history = useHistory();\r\n  const [isSuccess, setIsSuccess] = useState<boolean>(false);\r\n  const { request } = useHttp();\r\n  const isPay = useCallback(async () => {\r\n    try {\r\n      const fetched = await request(`/api/result`);\r\n      setIsSuccess(fetched === 'success');\r\n      setIsModal(true)\r\n    } catch (e) {console.log(e)}\r\n  }, [request]);\r\n\r\n  const { values, errors, handleChange, handleSubmit} = useForm(isPay, validate);\r\n  const [ isModal, setIsModal ] = useState<boolean>(false);\r\n\r\n  const onRequestClose = () => {\r\n    setIsModal(false);\r\n    if (isSuccess) {\r\n      history.push('/');\r\n    }\r\n  }\r\n\r\n  return(\r\n    <Card>\r\n      {isModal && <Modal isSuccess={isSuccess} onRequestClose={onRequestClose} />}\r\n      <form action=\"/pay\" method=\"POST\" onSubmit={handleSubmit}>\r\n        <InputField>\r\n          <PhoneLabel htmlFor=\"phone\">\r\n            Введите номер телефона:\r\n          </PhoneLabel>\r\n          <StyledInputMask\r\n            onChange={handleChange}\r\n            value={values.phone}\r\n            mask=\"+7 (999) 999-99-99\"\r\n            id=\"phone\"\r\n            placeholder=\"Номер телефона\"\r\n            name=\"phone\"\r\n            required\r\n          />\r\n          {errors.phone && (\r\n            <ErrorP>{errors.phone}</ErrorP>\r\n          )}\r\n        </InputField>\r\n        <InputField>\r\n          <PhoneLabel htmlFor=\"sum\">\r\n            Введите сумму (максимум 1000р):\r\n          </PhoneLabel>\r\n          <StyledInput\r\n            onChange={handleChange}\r\n            value={values.sum}\r\n            id=\"sum\"\r\n            placeholder=\"Сумма\"\r\n            name=\"sum\"\r\n            required\r\n          />\r\n          {errors.sum && (\r\n            <ErrorP>{errors.sum}</ErrorP>\r\n          )}\r\n        </InputField>\r\n        <Btn type=\"submit\" >Оплатить</Btn>\r\n      </form>\r\n      <ImgOperator src={operator.image} />\r\n    </Card>\r\n  )\r\n}","import React, { useState, useEffect, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Navbar } from '../components/Navbar';\r\nimport { PayCard } from '../components/PayCard';\r\nimport { useHttp } from '../hooks/http.hook';\r\nimport { Loader } from '../components/Loader';\r\nimport { Operator } from '../types/types';\r\n\r\nconst PayTitle = styled.h1`\r\n  text-align: center;\r\n\r\n  @media (max-width: 650px) {\r\n    font-size: 1.5rem;\r\n  }\r\n`\r\ntype Id = {\r\n  match: { params: { id: string}}\r\n}\r\n\r\nexport const PayPage = ({ match: { params: { id } }}: Id) => {\r\n  const [operator, setOperator] = useState<Operator>({id: '', title: '', image: ''});\r\n  const {request, loading} = useHttp();\r\n\r\n  const fetchOperator = useCallback(async () => {\r\n    try {\r\n      const fetched: Operator = await request(`/api/operators/${id}`);\r\n      setOperator(fetched);\r\n    } catch (e) {}\r\n  }, [request, id]);\r\n\r\n  useEffect(() => {\r\n    fetchOperator();\r\n  }, [fetchOperator]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Navbar />\r\n      {\r\n        loading\r\n          ? <Loader />\r\n          : <React.Fragment>\r\n              <PayTitle>Страница оплаты {operator.title}</PayTitle>\r\n              <PayCard operator={operator} />\r\n            </React.Fragment>\r\n      }\r\n    </React.Fragment>\r\n  )\r\n};","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { useRoutes } from './routes';\n\nfunction App() {\n  const routes = useRoutes();\n\n  return (\n    <Router>\n      {routes}\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { HomePage } from '../src/pages/homePage';\r\nimport { PayPage } from './pages/payPage';\r\n\r\nexport const useRoutes = () => {\r\n  return (\r\n    <Switch>\r\n      <Route path='/' exact>\r\n        <HomePage />\r\n      </Route>\r\n      <Route path='/pay/:id' component={PayPage}/>\r\n      <Redirect to='/' />\r\n    </Switch>\r\n  )\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}